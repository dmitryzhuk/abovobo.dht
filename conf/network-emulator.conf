{
  dht: {

    # overrides reference agent port number (which is 0 by default)
    node: { agent: { port: 30000 } }

    emulator: {
      # if this object exists, emulator will start its own router
      # at configured endpoint (address and port) taking the rest
      # of configuration parameters from normal node configuration.
      router: {

        # an address to bind to, will be `any local address` if not specified
        # address: "0.0.0.0",

        # a port number to bind to
        port:    ${dht.node.agent.port}
      },

      # array of routers to bootstrap on
      routers: [
        {
          address: "127.0.0.1",
          port:    ${dht.node.agent.port}
        }
      ],

      # number of nodes to start in emulator
      number: 217,

      # uri to node data storage
      storage: "jdbc:h2:~/db/network-emulator",

      # base name of schema in storage for individual node
      # the node ID will be concatenated with it
      schema: "ipv4_",

      # type of IP addresses to be used (IPv4 or IPv6);
      # note that this must be aligned with actual addresses of routers and nodes
      # and probably with schema name too
      ip: "v4"
    }
  }
}
